@using System.Text.Json
@inject IHttpContextAccessor HttpContextAccessor

@{
    // 🔹 Lấy dữ liệu giỏ hàng từ Session
    var session = HttpContextAccessor.HttpContext.Session;
    var cartJson = session.GetString("ShoppingCart");
    int cartCount = 0;

    if (!string.IsNullOrEmpty(cartJson))
    {
        try
        {
            var cartItems = JsonSerializer.Deserialize<List<MHKCafe.Models.ViewModels.CartItem>>(cartJson);
            if (cartItems != null)
                cartCount = cartItems.Sum(item => item.Quantity);
        }
        catch { }
    }
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MHKCafe</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/MHKCafe.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand d-flex align-items-center" asp-area="" asp-controller="mhkHome" asp-action="Index">
                    <img src="~/images/logo1.jpg" alt="Logo" style="height: 60px;" class="me-2">
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                        data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav me-auto d-flex flex-row gap-3">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="mhkHome" asp-action="Index">Trang chủ</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="mhkChiNhanh" asp-action="Index">Cửa hàng</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="mhkThucDons" asp-action="Index">Thực đơn</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-controller="mhkBlog" asp-action="Index">Tin tức</a>
                        </li>
                    </ul>

                    <ul class="navbar-nav d-flex flex-row gap-3 align-items-center">
                        <!-- 🔹 Giỏ hàng có badge -->
                        <li class="nav-item">
                            <a class="btn btn-outline-primary position-relative" asp-controller="mhkCart" asp-action="Index">
                                <i class="bi bi-cart3"></i> Giỏ Hàng
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" id="cartBadge">
                                    @cartCount
                                </span>
                            </a>
                        </li>

                        <!-- 🔹 Kiểm tra đăng nhập -->
                        @if (Context.Session.GetInt32("AdminId") == null)
                        {
                            <li class="nav-item">
                                <a class="btn btn-outline-primary" asp-controller="mhkAuth" asp-action="Login">
                                    <i class="bi bi-person"></i> Đăng nhập
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="btn btn-outline-primary" asp-controller="mhkAuth" asp-action="Register">
                                    <i class="bi bi-person-plus"></i> Đăng ký
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item dropdown">
                                <a class="btn btn-outline-primary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                                    <i class="bi bi-person-circle"></i> @Context.Session.GetString("HoTen")
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" asp-controller="mhkAdmins" asp-action="Index"><i class="bi bi-speedometer2"></i> Quản lý</a></li>
                                    <li><hr class="dropdown-divider"></li>
                                    <li><a class="dropdown-item" asp-controller="mhkAuth" asp-action="Logout"><i class="bi bi-box-arrow-right"></i> Đăng xuất</a></li>
                                </ul>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        @RenderBody()
    </div>

    @RenderSection("ExtraContent", required: false)

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- ✅ Cập nhật động số lượng giỏ hàng -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            updateCartCount();
        });

        function updateCartCount() {
            fetch('/mhkCart/GetCartCount')
                .then(res => res.json())
                .then(data => {
                    if (data.success) updateCartBadge(data.totalItems);
                })
                .catch(err => console.error(err));
        }

        function updateCartBadge(count) {
            const badge = document.getElementById('cartBadge');
            if (badge) {
                badge.textContent = count;
                badge.classList.add('pulse');
                setTimeout(() => badge.classList.remove('pulse'), 1000);
            }
        }

        function showCartNotification(message) {
            const toast = document.createElement('div');
            toast.className = 'position-fixed bottom-0 end-0 p-3';
            toast.style.zIndex = '1050';
            toast.innerHTML = `
                <div class="toast show" role="alert">
                    <div class="toast-header">
                        <strong class="me-auto">MHK Cafe</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body">${message}</div>
                </div>`;
            document.body.appendChild(toast);
            setTimeout(() => toast.remove(), 3000);
        }

        function addToCart(productId, productName, price, imageUrl) {
            fetch('/mhkCart/AddToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId, productName, price, imageUrl, quantity: 1
                })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    showCartNotification(`✅ Đã thêm "${productName}" vào giỏ hàng!`);
                    updateCartBadge(data.totalItems);
                }
            })
            .catch(() => showCartNotification('❌ Lỗi khi thêm sản phẩm!'));
        }
    </script>

    <style>
        .pulse {
            animation: pulse 0.5s ease-in-out;
        }

        @@keyframes pulse {
            0% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.2);
            }

            100% {
                transform: scale(1);
            }
        }

        .btn-outline-primary {
            border-color: #8B4513;
            color: #8B4513;
        }

            .btn-outline-primary:hover {
                background-color: #8B4513;
                color: white;
            }

        .nav-link.text-dark:hover {
            color: #8B4513 !important;
        }

        .badge.bg-danger {
            background-color: #dc3545 !important;
            font-size: 0.75em;
        }

        .dropdown-menu {
            border: 1px solid #8B4513;
        }

        .dropdown-item:hover {
            background-color: #8B4513;
            color: white;
        }
    </style>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
